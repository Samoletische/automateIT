{
  "pageName": "avitoBooks",                                     // название страницы параметров
  "proxyServer": "45.113.66.34:8080",                           // адрес прокси
  "startPage": "https://www.avito.ru/omsk/noutbuki?s_trg=3&sgtd=17&q=%D0%BF%D0%B8%D0%BE%D0%BD%D0%B5%D1%80%D1%81%D0%BA%D0%B8%D0%B9+%D0%B3%D0%B0%D0%BB%D1%81%D1%82%D1%83%D0%BA",
  "maxPagesCollect": 0,                                         // со скольких страниц собирать (0-со всех, но 100 максимум)
  "firstItemIndex": 0,                                          // индекс первого элемента на странице для сбора
  "currItemIndex": 0,                                           // индекс текущего элемента на странице для сбора
  "maxItemsCollect": 1,                                         // количество элементов для сбора, начиная с индекса первого элемента
  "currItemsCollect": 1,                                        // количество уже собранных элементов на странице
  "storage": {"method": "DB", "param": "insta_bil_edward?ven=vendor_title,prod=prod_title"},
                                                                // как сохранять данные - метод: JSON, DB; параметр: имя файла (JSON) или имя таблицы (DB)
                                                                // для DB после имени таблицы идёт "?", за ним "имя поля" в этой таблице, за ним "=", за ним значение "имени поля" из таблицы, с которой нужно соединить значения
                                                                // используется для дочерних страниц. Для главной страницы имя таблицы оканчивается "?"
  "parentElement": {
    "events": ["moveToElement", "click"],                       // действия, которые необходимо выполнить над элементом перед сбором данных
    "waitBetweenEvents": "true",                                // нужно ли делать паузы между действиями
    "waitWhenEnterText": "true",                                // человекоподобный ввод текста
    "cssSelector": "div.item_table",
    "values": [ {"fieldName": "id", "attr": "data-item-id"} ],  // собранные данные распределяем по полям таблицы хранилища. Возможно использование "newUID"
    "childPages": [
      {
        "pageName": "avitoBooksImages",                           // ссылка на структуру данных со второстепенной страницы
        "pageParent": "id"                                        // какое поле из этой таблицы брать в качестве идентификатора родителя второстепенной
      }
    ]
  },
  "childElements": {
    "waitBetweenEvents": "true",
    "waitWhenEnterText": "false",
    "elements": [
      {
        "cssSelector": "a.item-description-title-link",
        "events": [],
        "values": [ {"fieldName": "title", "attr": "title"} ]
      },
      {
        "cssSelector": "span.price",
        "events": [],
        "values": [ {"fieldName": "price", "attr": "content"} ]
      },
      {
        "cssSelector": "img.item-extended-phone",
        "events": ["click"],
        "values": [ {"fieldName": "phoneImg", "attr": "src"} ]
      }
    ]
  },
  "pagination": {
    "cssSelector": "div.pagination",
    "nextPage": "a.js-pagination-next",
    "events": [],
    "valueAttr": "href"
  },
  "process": [
    {"fieldName": "phone", "command": "save", "param": "img/"}     // способ обработки полей: save-сохранить в папку (имя файла будет: 'pageName/fieldName' + id)
  ],
  "childPages": [
    {}                                                            // структура повторяет структуру основной страницы
  ]
}
