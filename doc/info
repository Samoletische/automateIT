----------------------------------------------------------------------------------------
Описание системы:
  Система предназначена для сбора, преобразования, хранения, отслеживания данных и предоставления отчётности по данным
  с web-ресурсов.

Описание подсистем:
  Подсистема "Входные данные".
    Расположение: Сервер (start.php).
    Вход: пока - файл web.json. В дальнейшем данные с web-страницы.
    Выход: передача web.json в "Сборщик" (web.php). В дальнейшем в "Сборщик" (web.php) по адресу клиента,
      заполневшего данные на web-странице.

    Пока получение параметров для запуска сбора сводиться к редактированию файла формата web.json.
    Данная подсистема получает по HTTP-запросу (в JSON формате) команду (command) getJSON и имя задания (param). В ответ возвращает
    конкретный файл параметров формата web.json.

  Подсистема "Клиент".
    Расположение: Клиент (класс Web).
    Вход: web.json от подсистемы "Входные данные".
    Выход: отсутствует.

    Запускает web-сокет для обмена данными с Сервером и Сборщиками.
    Управление Сборщиками и очередью заданий.
    Запрашивает у "знакомых" Сборщиков их статус готовности через HTTP-интерфейс. Если они готовы,
    то для каждого Сборщика запускается демон (см. ниже в подсистеме Сборщик).
    Если есть задание, ищет свободного Сборщика и передаёт задание ему.

  Подсистема "Сборщик".
    Расположение: Клиент (класс Spider).
    Состав:
      - HTTP-интерфейс для получения команд и отправки ответов Клиенту. Используется для управления
      и получения информации от запущенного экземпляра Сборщика.
      - запущенный(е) независимый(е) экземпляр(ы) Сборщика, который(е) получае(ю)т команды и
      отправляе(ю)т ответы HTTP-интерфейсу. Выполняе(ю)т нижеописанные действия в ассинхронном режиме.
    Вход: web.json и страницу, с которой собирать, от "Клиента".
    Выход: передача storage.json "Хранению данных" (storage.php) для сохранения данных в БД.

    Принимает команды:
      - areYouReady (http) - проверяет возможность запуска
      Сборщика (проверяет доступность сервера Selenuim, доступность БД, файловой системы и т.д.).
      Проверки пока не работают. Если Сборщик на этом клиенте может выполнять свои функции (прошли все проверки), то
      запускается tcp-сокет с адресом и портом, идентифицирующими данного Сборщика.
      Результат: статус - ready
      - areYouReady (tcp) - то же самое, что и через http за исключением того, что сокет не создаётся.
      Результат: статус - ready
      - kill (http) - жёсткое закрытие процесса сокета.
      - close (tcp) - завершение Сборщика, закрытие сокета.
      - getStatus (tcp) - получение текущего статуса.
      - collect (tcp) - запуск отдельного процесса для сбора данных по заданию.
      Вход: параметры задания формата web.json
      Выход: файл формата collector.json
      Результат: статус - collecting
      - process (tcp) - запуск отдельного процесса для переработки данных сборки.
      Вход: файл формата collector.json
      Выход: файл формата storage.json
      Результат: статус - processing
      - storage (tcp) - запуск отдельного процесса для сохранения обработанных данных в промежуточной БД.
      Вход: файл формата storage.json
      Результат: статус - storaging

    Статусы Сборщика:
      - ready - готов к новому заданию
      - error - состояние ошибки
      - collecting - идёт сбор данных
      - collected - сбор данных завершён
      - processing - идёт обработка данных
      - processed - обработка данных завершена
      - storaging - идёт сохранение данных
      - storaged - сохранение данных завершено

    Сбор данных:
      - Собирает данные с текущей установленной страницы на основании данных из web.json.
      - Основные шаги сбора данных:
        I   Выполнить действия до сбора данных (нажать на кнопки, собрать общие данные для страницы, прокрутить страницу, и т. д.)
        II  Найти головные элементы данных
          а)  проверить подходят ли данные для сбора по фильтрам
          б)  выполнить действия (для показа скрытых данных)
          в)  собрать данные (аттрибутов, ссылок)
        III Найти второстепенные элементы
          а)  проверить подходят ли данные для сбора по фильтрам
          б)  выполнить действия (для показа скрытых данных)
          в)  собрать данные (аттрибутов, ссылок)
        IV  Cобрать данные на второстепенных страницах
        V   Перейти на следующую страницу
    Обработка данных:
      - Перерабатывает полученные данные. На данный момент реализованы (сохраняет файлы,
      распознаёт телефоны с картинки).
    Сохранение данных:
      - Отправляет переработанные данные подсистеме "Хранение данных" в формате storage.json.

  Подсистема "Обработка данных" (временно отсутствует).
    Расположение: Клиент (client.php)
    Вход: collector.json от "Клиента"
    Выход: collector.json "Хранению данных"

    Преобразует собранные данные: скачивает, преобразует из base64, сохраняет файлы, распознаёт картинки.
    В рамках задачи вывести в отдельный класс. Реализовать действие скачать по ссылке.
    Реализованы следующие команды:
      - recognize - распознавание номера телефона с картинки
      - save - сохранение объекта в файл по собранной ссылке
      - trim - обрезать пробелы и другие символы (перевод каретки, табуляция) с обоих сторон строки;
      - left - взять первые N символов строки;
      - right - взять последние N символов строки;
      - cutLeft - отрезать первые N символов строки;
      - cutRight - отрезать последние N символов строки.

  Подсистема "Хранение данных".
    Расположение: Сервер (storage.php)
    Вход: storage.json от "клиента"
    Выход: Отсутствует

    Сохраняет данные в JSON формате или в базе данных.

  Подсистема "Мониторинг" (временно отсутствует).
    Расположение: Сервер (monitor.php)
    Вход: в рамках задачи файл monitor.json. В дальнейшем данные с базы данных (настройки действующих
    мониторингов)
    Выход: Оповещение заказчика при срабатывании целей

    Отслеживает появление целей и оповещает заказчика о появлении цели.

  Подсистема "Отчётность" (временно отсутствует).
    Расположение: Клиент (report.php)
    Вход: Запрашивает данные у "Хранения данных".
    Выход: Файл или отправляет данные в другую БД/Систему.
